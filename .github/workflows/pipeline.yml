name: Build and Deploy
on:
  push:
    branches:
      - main

jobs:
  publish:
    name: Publish @uireact
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: "0"
          run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - name: Set up github user
        run: |
          git config --global user.email "16787893+inavac182@users.noreply.github.com"
          git config --global user.name "@$GITHUB_ACTOR"
          git remote set-url origin https://$GITHUB_ACTOR:$GITHUB_PAT@github.com/inavac182/uireact
        env:
          GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Test
        run: npm run test
      - name: Authenticate with Registry
        uses: actions/setup-node@v2
        with:
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH }}
      - name: Publishing packages
        run: npx lerna publish --yes 
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_PUBLISH }}
  build:
    name: Build
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master
      - name: Install Dependencies
        run: npm ci
      - name: Build
        run: npm run docz:build
      - name: Archive Production Artifact
        uses: actions/upload-artifact@master
        with:
          name: dist
          path: .docz/dist
  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master
      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: dist
          path: .docz/dist
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
